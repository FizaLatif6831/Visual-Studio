#include <iostream>
#include <vector>
#include <algorithm> // for max_element
using namespace std;

void countSort(int a[], int n, int pos)
{
    vector<int> count(10, 0); // Using 10 for the decimal system (0-9 digits)
    vector<int> b(n, 0);

    for (int i = 0; i < n; i++)
    {
        ++count[(a[i] / pos) % 10];
    }

    for (int i = 1; i < 10; i++)
    {
        count[i] += count[i - 1];
    }

    for (int i = n - 1; i >= 0; i--)
    {
        b[--count[(a[i] / pos) % 10]] = a[i];
    }

    for (int i = 0; i < n; i++)
    {
        a[i] = b[i];
    }
}

void radixSort(int a[], int n)
{
    int maxElement = *max_element(a, a + n); // Find the maximum element

    for (int pos = 1; maxElement / pos > 0; pos *= 10)
    {
        countSort(a, n, pos);
    }
}

int main()
{
    int n;
    cout << "Enter the size of the array: ";
    cin >> n;

    int* a = new int[n]; // Dynamically allocate array based on user input
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
    }

    radixSort(a, n);

    cout << "Sorted array: ";
    for (int i = 0; i < n; i++)
    {
        cout << a[i] << " ";
    }
    cout << endl;

    delete[] a; // Free dynamically allocated memory
    return 0;
}
